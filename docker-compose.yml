version: "3.7"
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.network=traefik_proxy
      - --providers.file.directory=/etc/traefik
      - --providers.file.filename=config.toml
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.mydnschallenge.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.httpChallenge=true
      - --certificatesresolvers.mydnschallenge.acme.dnschallenge.provider=cloudflare
      - --certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=websecure
      - --certificatesresolvers.mydnschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.mydnschallenge.acme.email=${CF_EMAIL}
      - --certificatesresolvers.myresolver.acme.email=${CF_EMAIL}
      - --certificatesresolvers.mydnschallenge.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    environment:
      - CF_API_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    networks:
      traefik_proxy:
    volumes:
      - ${HOME}/Docker/traefik/.letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/Docker/traefik:/etc/traefik
  nginx-personal:
    image: linuxserver/nginx
    container_name: personal-web-nginx
    networks:
      traefik_proxy:
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HOME}/Docker/ANTHONYRABBITO/config:/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.myweb.rule=${DOMAIN}
      - traefik.http.routers.myweb.entrypoints=websecure
      - traefik.http.routers.myweb.tls.certresolver=mydnschallenge
      - traefik.http.services.myweb.loadbalancer.server.port=80
      - traefik.docker.network=traefik_proxy
  bitwarden:
    image: bitwardenrs/server
    restart: unless-stopped
    container_name: bitwarden-rs
    volumes:
      - ${HOME}/Docker/bitwarden:/data
    environment:
      - WEBSOCKET_ENABLED= true
      - SIGNUPS_ALLOWED= false
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} 
    networks:
      traefik_proxy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      - traefik.http.middlewares.redirect-https.redirectScheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectScheme.permanent=true
      - traefik.http.routers.bitwarden-ui-https.rule=${BWDOMAIN}
      - traefik.http.routers.bitwarden-ui-https.entrypoints=websecure
      - traefik.http.routers.bitwarden-ui-https.tls=true
      - traefik.http.routers.bitwarden-ui-https.service=bitwarden-ui
      - traefik.http.routers.bitwarden-ui-http.rule=${BWDOMAIN}
      - traefik.http.routers.bitwarden-ui-http.entrypoints=web
      - traefik.http.routers.bitwarden-ui-http.middlewares=redirect-https
      - traefik.http.routers.bitwarden-ui-http.service=bitwarden-ui
      - traefik.http.services.bitwarden-ui.loadbalancer.server.port=80
      - traefik.http.routers.bitwarden-websocket-https.rule=${BWDOMAIN_WS}
      - traefik.http.routers.bitwarden-websocket-https.entrypoints=websecure
      - traefik.http.routers.bitwarden-websocket-https.tls=true
      - traefik.http.routers.bitwarden-websocket-https.service=bitwarden-websocket
      - traefik.http.routers.bitwarden-websocket-http.rule=${BWDOMAIN_WS}
      - traefik.http.routers.bitwarden-websocket-http.entrypoints=web
      - traefik.http.routers.bitwarden-websocket-http.middlewares=redirect-https
      - traefik.http.routers.bitwarden-websocket-http.service=bitwarden-websocket
      - traefik.http.services.bitwarden-websocket.loadbalancer.server.port=3012
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-dynDNS
    restart: always
    environment:
      - EMAIL=${CF_EMAIL}
      - API_KEY=${CF_API_KEY}
      - ZONE=${CF_BASE}
      - SUBDOMAIN=${SUBDOMAIN}
      - PROXIED=false
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} 
  homeassistant:
    container_name: homeassistant-stable
    image: homeassistant/home-assistant:stable
    networks:
      macvlan101:
      macvlan100:
      traefik_proxy:
    volumes:
      - ${HOME}/Docker/homeassistant:/config
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.homeassistant.rule=${HILLHADOMAIN}
      - traefik.http.routers.homeassistant.entrypoints=websecure
      - traefik.http.routers.homeassistant.tls.certresolver=mydnschallenge
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
      - traefik.docker.network=traefik_proxy
  nodered:
    container_name: node-red
    restart: unless-stopped
    networks:
      traefik_proxy:
    image: nodered/node-red:latest
    depends_on:
      - "homeassistant"
    user: root
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${HOME}/Docker/nodered:/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.nodered.rule=Host(`node-red.hill`)
      - traefik.http.routers.nodered.entrypoints=web
      - traefik.docker.network=traefik_proxy




networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  macvlan101:
    external: true
  macvlan100:
    external: true